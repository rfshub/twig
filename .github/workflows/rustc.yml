# .github/workflows/ci.yml

name: Rust Cross CI

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Linux GNU
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            ext: tar.gz
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            ext: zip
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            ext: deb
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            ext: rpm

          # Linux MUSL
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            ext: tar.gz
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            ext: zip
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            ext: tar.gz
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            ext: zip

          # Apple macOS
          - target: x86_64-apple-darwin
            os: macos-latest
            ext: tar.gz
          - target: x86_64-apple-darwin
            os: macos-latest
            ext: zip
          - target: aarch64-apple-darwin
            os: macos-latest
            ext: tar.gz
          - target: aarch64-apple-darwin
            os: macos-latest
            ext: zip

          # Archlinux (manual pkgbuild)
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            ext: pkg.tar.zst

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Dependencies
        if: matrix.ext == 'deb' || matrix.ext == 'rpm'
        run: sudo apt-get update && sudo apt-get install -y cargo-deb cargo-generate-rpm

      - name: Install musl-tools
        if: contains(matrix.target, 'musl')
        run: sudo apt-get install -y musl-tools

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build Binary
        run: |
          mkdir -p dist
          if [[ "${{ matrix.ext }}" == "deb" ]]; then
            cargo deb --target ${{ matrix.target }} --no-build --output dist/package.deb
          elif [[ "${{ matrix.ext }}" == "rpm" ]]; then
            cargo generate-rpm --target ${{ matrix.target }} --output dist
          elif [[ "${{ matrix.ext }}" == "pkg.tar.zst" ]]; then
            sudo pacman -Syu --noconfirm base-devel fakeroot
            cd archlinux && makepkg -fs --noconfirm && mv *.pkg.tar.zst ../dist/
          else
            cross build --release --target ${{ matrix.target }}
            BIN=target/${{ matrix.target }}/release/twig
            cp $BIN dist/
            cd dist
            if [[ "${{ matrix.ext }}" == "tar.gz" ]]; then
              tar -czf twig-${{ matrix.target }}.tar.gz twig
            elif [[ "${{ matrix.ext }}" == "zip" ]]; then
              zip twig-${{ matrix.target }}.zip twig
            fi
            cd ..
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: twig-${{ matrix.target }}.${{ matrix.ext }}
          path: dist/twig-${{ matrix.target }}.${{ matrix.ext }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*.tar.gz\ndist/**/*.zip\ndist/**/*.deb\ndist/**/*.rpm\ndist/**/*.pkg.tar.zst