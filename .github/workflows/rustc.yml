name: Rust CI

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: stable
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            toolchain: stable
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            toolchain: stable
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            toolchain: stable
          - os: macos-latest
            target: x86_64-apple-darwin
            toolchain: stable
          - os: macos-latest
            target: aarch64-apple-darwin
            toolchain: stable

    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install build dependencies (Ubuntu only)
        if: contains(matrix.os, 'ubuntu')
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential pkg-config libssl-dev musl-tools \
            gcc-aarch64-linux-gnu gcc-multilib curl

      - name: Install Rust and target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
          target: ${{ matrix.target }}

      - name: Build binary
        env:
          OPENSSL_DIR: /usr
        run: |
          cargo build --release --target=${{ matrix.target }}

      - name: Read crate metadata
        id: metadata
        run: |
          name=$(grep '^name =' Cargo.toml | head -n1 | sed 's/.*= "\(.*\)"/\1/')
          version=$(grep '^version =' Cargo.toml | head -n1 | sed 's/.*= "\(.*\)"/\1/')
          echo "name=$name" >> "$GITHUB_OUTPUT"
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Package binary
        run: |
          cd target/${{ matrix.target }}/release
          tar czf "${{ steps.metadata.outputs.name }}-${{ matrix.target }}.tar.gz" ${{ steps.metadata.outputs.name }}

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.metadata.outputs.version }}
          name: v${{ steps.metadata.outputs.version }}
          files: target/${{ matrix.target }}/release/${{ steps.metadata.outputs.name }}-${{ matrix.target }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
